package generator

import (
	"bufio"
	_ "embed"
	"fmt"
	"io"
	"strings"
)

//go:embed template.txt
var templateString string

const commentPrefix = "//+prom:metric"
const generatorName = "livefun codegen"

const importText = `
import (
	"github.com/prometheus/client_golang/prometheus"
	"github.com/prometheus/client_golang/prometheus/promauto"
)

`

func RunGenerator(content io.Reader, packageName string) (string, error) {
	generatedTextContent := fmt.Sprintf("// Code generated by %q; DO NOT EDIT.\n\npackage %s\n\n", generatorName, packageName)
	generatedTextContent += importText

	scanner := bufio.NewScanner(content)

	for scanner.Scan() {
		line := scanner.Text()
		line = strings.TrimSpace(line)
		if strings.HasPrefix(line, commentPrefix) {
			if ok := scanner.Scan(); !ok {
				return "", fmt.Errorf("not expected EOF")
			}
			nextLine := strings.TrimSpace(scanner.Text())
			varName := strings.Split(nextLine, ".")[0]
			generatedTextContent += generateTextContent(line, varName)
		}
	}

	return generatedTextContent, nil
}

func generateTextContent(line, varName string) string {
	/* Come delle bestie */

	/* example */
	//+prom:metric:counter name:myapp_processed_ops_total

	metricName := strings.Split(strings.Split(line, "name:")[1], " ")[0]

	return fmt.Sprintf(`var %s = promauto.NewCounter(prometheus.CounterOpts{
	Name: %q,
})

`, varName, metricName)
}
